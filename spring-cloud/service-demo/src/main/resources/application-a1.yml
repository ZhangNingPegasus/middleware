# Apollo Config
app:
  # Apollo的AppId(类似ACM中的DataId)
  id: services
apollo:
  # apollo_meta需配置在环境变量中
  meta: ${apollo_meta:http://apolloconfig.dev.wyyt:8640/}
  bootstrap:
    enabled: true
    namespaces: Architecture.spring-cloud-common,application
    eagerLoad:
      enabled: true

server:
  port: 1001

spring:
  servlet:
    multipart:
      max-request-size: 100MB
      max-file-size: 10MB
  application:
    name: a
    group: sample-group
    version: 1.0
    strategy:
      scan:
        # 指定对业务RestController类的扫描路径。此项配置作用于RPC方式的调用拦截、消费端的服务隔离和调用链三项功能
        packages: springcloud.service.demo
  cloud:
    consul:
      host: ${consul_host}
      port: ${consul_port}
  zipkin:
    sender:
      type: kafka
  kafka:
    bootstrap-servers: ${zipkin_kafka_servers}