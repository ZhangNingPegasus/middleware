<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.wyyt.kafka.monitor.mapper.SchemaMapper">
    <insert id="createTableIfNotExists">
        CREATE TABLE IF NOT EXISTS `sys_admin` (
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `login_mode` INT UNSIGNED NOT NULL COMMENT '角色类型(1: DB 2: LDAP)',
        `sys_role_id` BIGINT NOT NULL COMMENT '角色id(sys_role表的主键)',
        `username` VARCHAR(64) NOT NULL COMMENT '管理员的登陆用户名',
        `password` VARCHAR(128) NOT NULL COMMENT '管理员的登陆密码',
        `name` VARCHAR(64) NOT NULL COMMENT '管理员姓名',
        `phone_number` VARCHAR(64) NOT NULL COMMENT '手机号码',
        `email` VARCHAR(128) NOT NULL COMMENT '邮件地址',
        `remark` VARCHAR(256) NOT NULL COMMENT '备注',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`) USING BTREE,
        UNIQUE INDEX `idx_username`(`username`) USING BTREE,
        INDEX `idx_sys_role_id`(`sys_role_id`) USING BTREE
        ) COMMENT ='管理员信息';

        CREATE TABLE IF NOT EXISTS `sys_role` (
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `name` VARCHAR(64) NOT NULL COMMENT '角色名称',
        `super_admin` TINYINT(1) NOT NULL COMMENT '是否是超级管理员(1:是; 0:否)',
        `remark` VARCHAR(256) NOT NULL COMMENT '角色说明',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`) USING BTREE,
        UNIQUE INDEX `idx_name`(`name`) USING BTREE
        ) COMMENT ='角色信息';

        CREATE TABLE IF NOT EXISTS `sys_page` (
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `name` VARCHAR(64) NOT NULL COMMENT '页面名称',
        `url` VARCHAR(256) NOT NULL COMMENT '页面地址',
        `is_menu` TINYINT(1) NOT NULL COMMENT '页面是否出现在菜单栏',
        `is_default` TINYINT(1) NOT NULL COMMENT '是否是默认页(只允许有一个默认页，如果设置多个，以第一个为准)',
        `is_blank` TINYINT(1) NOT NULL COMMENT '是否新开窗口打开页面',
        `icon_class` VARCHAR(64) NOT NULL COMMENT 'html中的图标样式',
        `parent_id` BIGINT(20) UNSIGNED NOT NULL COMMENT '父级id(即本表的主键id)',
        `order_num` BIGINT(128) UNSIGNED NOT NULL COMMENT '顺序号(值越小, 排名越靠前)',
        `remark` VARCHAR(256) NOT NULL COMMENT '备注',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`) USING BTREE,
        INDEX `idx_url`(`url`) USING BTREE
        ) COMMENT ='页面信息';

        CREATE TABLE IF NOT EXISTS `sys_permission` (
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `sys_role_id` BIGINT UNSIGNED NOT NULL COMMENT 'sys_role的主键id',
        `sys_page_id` BIGINT UNSIGNED NOT NULL COMMENT 'sys_page的主键id',
        `can_insert` TINYINT(1) NOT NULL COMMENT '是否能新增(true:能; false:不能)',
        `can_delete` TINYINT(1) NOT NULL COMMENT '是否能删除(true:能; false:不能)',
        `can_update` TINYINT(1) NOT NULL COMMENT '是否能修改(true:能; false:不能)',
        `can_select` TINYINT(1) NOT NULL COMMENT '是否能读取(true:能; false:不能)',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`) USING BTREE,
        UNIQUE INDEX `idx_sys_role_id_sys_page_id`(`sys_role_id`, `sys_page_id`) USING BTREE
        ) COMMENT ='权限信息';

        CREATE TABLE IF NOT EXISTS `sys_topic_size` (
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `topic_name` VARCHAR(256) NOT NULL COMMENT '主题名称',
        `log_size` BIGINT(20) NOT NULL COMMENT '主题对应的信息数量',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`, `row_create_time`) USING BTREE,
        INDEX `idx_row_create_time`(`row_create_time`) USING BTREE,
        UNIQUE INDEX `idx_topic_name_row_create_time`(`topic_name`, `row_create_time`) USING BTREE
        ) COMMENT ='主题消息量'
        PARTITION BY RANGE COLUMNS(`row_create_time`)
        (
        <foreach collection="partitionInfoList" item="partitionInfo">
            PARTITION `${partitionInfo.partitionName}` VALUES LESS THAN ('${partitionInfo.partitionDescr}'),
        </foreach>
        PARTITION `${@org.wyyt.kafka.monitor.common.Constants@MAX_VALUE_PARTITION_NAME}` VALUES LESS THAN MAXVALUE
        );

        CREATE TABLE IF NOT EXISTS `sys_topic_lag` (
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `group_id` VARCHAR(256) NOT NULL COMMENT '消费者名称',
        `topic_name` VARCHAR(256) NOT NULL COMMENT '消费者订阅的主题名称',
        `offset` BIGINT(10) UNSIGNED NOT NULL COMMENT '当前消费的偏移量位置',
        `lag` BIGINT(10) UNSIGNED NOT NULL COMMENT '消息堆积数量',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`, `row_create_time`) USING BTREE,
        INDEX `idx_row_create_time`(`row_create_time`) USING BTREE,
        INDEX `idx_group_id_topic_name`(`group_id`, `topic_name`) USING BTREE
        ) COMMENT ='消费者消息堆积记录'
        PARTITION BY RANGE COLUMNS(`row_create_time`)
        (
        <foreach collection="partitionInfoList" item="partitionInfo">
            PARTITION `${partitionInfo.partitionName}` VALUES LESS THAN ('${partitionInfo.partitionDescr}'),
        </foreach>
        PARTITION `${@org.wyyt.kafka.monitor.common.Constants@MAX_VALUE_PARTITION_NAME}` VALUES LESS THAN MAXVALUE
        );

        CREATE TABLE IF NOT EXISTS `sys_kpi`(
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `host` VARCHAR(256) NOT NULL COMMENT 'kpi的主机信息',
        `kpi` INT(10) UNSIGNED NOT NULL COMMENT 'kpi指标名称',
        `value` DOUBLE UNSIGNED NOT NULL COMMENT 'kpi值',
        `collect_time` DATETIME(3) NOT NULL COMMENT '采集时间',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`, `row_create_time`) USING BTREE,
        INDEX `idx_row_create_time`(`row_create_time`) USING BTREE,
        INDEX `idx_kpi`(`kpi`) USING BTREE
        ) COMMENT ='各项指标信息'
        PARTITION BY RANGE COLUMNS(`row_create_time`)
        (
        <foreach collection="partitionInfoList" item="partitionInfo">
            PARTITION `${partitionInfo.partitionName}` VALUES LESS THAN ('${partitionInfo.partitionDescr}'),
        </foreach>
        PARTITION `${@org.wyyt.kafka.monitor.common.Constants@MAX_VALUE_PARTITION_NAME}` VALUES LESS THAN MAXVALUE
        );

        CREATE TABLE IF NOT EXISTS `sys_mail_config`(
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `host` VARCHAR(128) NOT NULL COMMENT '邮箱服务器地址',
        `port` VARCHAR(32) NOT NULL COMMENT '邮箱服务器端口',
        `username` VARCHAR(128) NOT NULL COMMENT '邮箱服务器用户名',
        `password` VARCHAR(128) NOT NULL COMMENT '邮箱服务器密码',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`) USING BTREE
        ) COMMENT ='邮箱配置信息';

        CREATE TABLE IF NOT EXISTS `sys_dingding_config`(
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `access_token` VARCHAR(128) NOT NULL COMMENT '钉钉机器人的access_token',
        `secret` VARCHAR(128) NOT NULL COMMENT '钉钉机器人的加签秘钥',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`) USING BTREE
        ) COMMENT ='钉钉配置信息';

        CREATE TABLE IF NOT EXISTS `sys_alert_cluster`(
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `type` INT(10) UNSIGNED NOT NULL COMMENT '集群主机类型(1. zookeeper; 2: kafka)',
        `server` VARCHAR(32) NOT NULL COMMENT '服务器地址',
        `email` VARCHAR(128) NOT NULL COMMENT '警报邮件的发送地址',
        `access_token` VARCHAR(128) NOT NULL COMMENT '钉钉机器人的access_token',
        `secret` VARCHAR(128) NOT NULL COMMENT '钉钉机器人的加签秘钥',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`) USING BTREE,
        UNIQUE INDEX `idx_type_server`(`type`, `server`) USING BTREE
        ) COMMENT ='集群警告信息';

        CREATE TABLE IF NOT EXISTS `sys_alert_consumer`(
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `group_id` VARCHAR(128) NOT NULL COMMENT '消费组名称',
        `topic_name` VARCHAR(128) NOT NULL COMMENT '消费组对应的主题名称',
        `lag_threshold` BIGINT(20) UNSIGNED NOT NULL COMMENT '消息积压的数量阀值，超过这个阀值则会触发报警',
        `access_token` VARCHAR(128) NOT NULL COMMENT '钉钉机器人的access_token',
        `secret` VARCHAR(128) NOT NULL COMMENT '钉钉机器人的加签秘钥',
        `email` VARCHAR(128) NOT NULL COMMENT '警报邮件的发送地址',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`) USING BTREE,
        UNIQUE INDEX `idx_group_id_topic_name`(`group_id`, `topic_name`) USING BTREE
        ) COMMENT ='消费端警告信息';

        CREATE TABLE IF NOT EXISTS `sys_alert_topic` (
        `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `topic_name` VARCHAR(128) NOT NULL COMMENT '主题名称',
        `from_time` VARCHAR(32) NULL DEFAULT NULL COMMENT '监听主题的开始时间',
        `to_time` VARCHAR(32) NULL DEFAULT NULL COMMENT '监听主题的结束时间',
        `from_tps` INT(11) NULL DEFAULT NULL COMMENT '主题发送消息的TPS下限',
        `to_tps` INT(11) NULL DEFAULT NULL COMMENT '主题发送消息的TPS上限',
        `from_mom_tps` INT(11) NULL DEFAULT NULL COMMENT '主题发送消息的TPS变化下限',
        `to_mom_tps` INT(11) NULL DEFAULT NULL COMMENT '主题发送消息的TPS变化上限',
        `access_token` VARCHAR(128) NOT NULL COMMENT '钉钉机器人的access_token',
        `secret` VARCHAR(128) NOT NULL COMMENT '钉钉机器人的加签秘钥',
        `email` VARCHAR(128) NULL DEFAULT NULL COMMENT '警报邮件的发送地址',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)
        COMMENT'更新时间',
        PRIMARY KEY (`id`) USING BTREE,
        UNIQUE INDEX `idx_topic_name`(`topic_name`) USING BTREE
        ) COMMENT ='主题警告信息';

        CREATE TABLE IF NOT EXISTS `sys_table_name` (
        `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
        `topic_name` VARCHAR(128) NOT NULL COMMENT '主题名称',
        `record_table_name` VARCHAR(256) NOT NULL COMMENT '主题对应的数据表名称(存储基本信息)',
        `record_detail_table_name` VARCHAR(256) NOT NULL COMMENT '主题对应的数据表名称(存储消息体)',
        `row_create_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',
        `row_update_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT
        '更新时间',
        PRIMARY KEY (`id`) USING BTREE,
        UNIQUE INDEX `idx_topic_name`(`topic_name`) USING BTREE,
        UNIQUE INDEX `idx_record_table_name`(`record_table_name`) USING BTREE,
        UNIQUE INDEX `idx_record_detail_table_name`(`record_detail_table_name`) USING BTREE
        ) COMMENT ='主题与物理表之间的关系信息';

        <bind name="DEFAULT_ADMIN_USERNAME"
              value="@org.wyyt.admin.ui.common.Constants@DEFAULT_ADMIN_USER_NAME"/>
        <bind name="DEFAULT_ADMIN_PASSWORD"
              value="@org.wyyt.admin.ui.common.Constants@DEFAULT_ADMIN_PASSWORD"/>
        <bind name="SYSTEM_ROLE_NAME"
              value="@org.wyyt.admin.ui.common.Constants@SYSTEM_ROLE_NAME"/>
        INSERT IGNORE INTO `sys_admin`(`id`,`sys_role_id`, `username`, `password`, `name`, `phone_number`,
        `email`, `remark`)VALUES(1, 1, #{DEFAULT_ADMIN_USERNAME}, #{DEFAULT_ADMIN_PASSWORD} , '系统管理员', '',
        'zhangningkid@163.com', '');

        INSERT IGNORE INTO `sys_role`(`id`, `name`,`super_admin`, `remark`) VALUES (1, #{SYSTEM_ROLE_NAME},
        b'1','拥有最高权限');

        INSERT IGNORE INTO `sys_role`(`id`, `name`, `super_admin`, `remark`) VALUES (2, '研发人员', 0, '研发人员');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,
        `is_menu`, `is_default`, `is_blank`, `icon_class`, `parent_id`, `order_num`, `remark`) VALUES (1,'仪表盘',
        '/dashboard/index', b'1', b'1', b'0', 'layui-icon-engine', 0, 1, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES (2,'集群', '/cluster/tolist', b'1', b'0', b'0', 'layui-icon-share', 0,
        2, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES (3,'主题', '/topic/tolist', b'1', b'0', b'0', 'layui-icon-dialogue', 0,
        3, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES (4,'消息跟踪', '/record/tolist', b'1', b'0', b'0', 'layui-icon-list', 0,
        4, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES (5,'消费者', '/consumer/tolist', b'1', b'0', b'0', 'layui-icon-group',
        0, 5, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES (6,'ZooKeeper客户端', '/zkCli/tolist', b'1', b'0', b'0',
        'layui-icon-util', 0, 6, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES (7,'性能指标', '', b'1', b'0', b'0', 'layui-icon-console', 0, 7, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES (8,'ZooKeeper性能', '/zkperformance/tolist', b'1', b'0', b'0', '', 7,
        1, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES (9,'Kafka性能', '/kafkaperformance/tolist', b'1', b'0', b'0', '', 7, 2,
        '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(10, '警告设置','', b'1', b'0', b'0', 'layui-icon-notice',0, 8, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(11, '主题TPS设置', '/alerttopic/tolist', b'1', b'0', b'0', '', 10, 1,
        '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(12, '消费组设置', '/alertconsumer/tolist', b'1', b'0', b'0', '', 10, 2,
        '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(13, '集群主机设置', '/alertcluster/tolist', b'1', b'0', b'0', '', 10, 3,
        '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(14, '权限设置', '', b'1', b'0', b'0', 'layui-icon-password', 0, 9, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(15, '管理员配置', '/admin/tolist', b'1', b'0', b'0', '', 14, 1, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(16, '角色管理', '/role/tolist', b'1', b'0', b'0', '', 14, 2, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(17, '权限管理', '/permission/tolist', b'1', b'0', b'0', '', 14, 3, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(18, '系统设置', '', b'1', b'0', b'0', 'layui-icon-set', 0, 10, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(19, '页面配置', '/page/tolist', b'1', b'0', b'0', '', 18, 1, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(20, '邮件发送设置', '/mailconfig/tolist', b'1', b'0', b'0', '', 18, 2, '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(21, '钉钉机器人设置', '/dingdingconfig/tolist', b'1', b'0', b'0', '', 18, 3,
        '');

        INSERT IGNORE INTO `sys_page`(`id`, `name`, `url`,`is_menu`, `is_default`, `is_blank`, `icon_class`,
        `parent_id`, `order_num`, `remark`) VALUES(22, '大屏幕', '/bigscreen/tolist', b'1', b'0', b'1',
        'layui-icon-chart-screen', 0, 11, '');
    </insert>

    <insert id="addPartitions">
        ALTER TABLE `${tableName}` ADD PARTITION (
        <foreach collection="partitionInfoList" item="partitionInfo" separator=",">
            PARTITION `${partitionInfo.partitionName}` VALUES LESS THAN (${partitionInfo.partitionDescr})
        </foreach>
        )
    </insert>

    <delete id="removePartitions">
        ALTER TABLE `${tableName}`
        DROP PARTITION
        <foreach collection="partitionNameList" item="partitionName" separator=",">
            `${partitionName}`
        </foreach>
    </delete>

    <select id="listTables" resultType="java.lang.String">
        SELECT `table_name`
        FROM `information_schema`.`TABLES`
        WHERE `TABLE_SCHEMA` = #{dbName}
    </select>

    <select id="getPartition" resultType="org.wyyt.kafka.monitor.entity.po.Partition">
        SELECT `TABLE_NAME` `table_name`,
        `partition_name` `partition_name`,
        `partition_expression` `partition_expression`,
        `partition_description` `description`,
        `table_rows` `table_rows`
        FROM `INFORMATION_SCHEMA`.`PARTITIONS`
        WHERE `TABLE_SCHEMA` = SCHEMA()
        AND `TABLE_NAME` IN
        (
        <foreach collection="tableNameList" item="tableName" separator=",">
            '${tableName}'
        </foreach>
        )
        ORDER BY `table_name` ASC, `description` ASC
    </select>
</mapper>